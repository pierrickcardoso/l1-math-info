Les differents type (semaine 1):
	-Les entier ( int) defini par les nombre entiers 1,2,3 etc
	-Les flottants (float) defini par les nombre a virgule 3.2 , 4.5 , 2.6 (un flottant s'ecrit avec un point et non une virgule )
	-Les chaines de caractere (str) definie entre "" ou ''
Les differentes operation sur les type : 
	-Les entier :
		-La multiplication (+)
		-La division normal (/)
		-La division euclidienne (avce reste) (//)
		-La puissance (**)
		-Le reste de la dvision euclidienne (%)
	-Les floats :
		-Identique au entier 
		Attention:
			-une operation avec un floattant resultera toujours par un flottant 
	-Les str :
		-La concatenation (+) 
		Ex "A"+"B"="AB"
		- La multiplication (*)
		Ex: "A"*4 = "AAAA"
Les variable (semaine 1/2):
	-Se definisse avec a droite une expression a evaluer et a gauche le nom de la variable
	Ex : Nombre=3+2 ici Nombre est le nom de la variable a laquelle sera affecter 3+2 soit 5
	-Peuvent etre global ( a tout le programme ) ou local a une fonction 
	-Pour suivre l'evolution d'une variable on utilise unn tableau de memoire qui a chaque etape du programme donne la valeur de chaque variable 
	Ex :
	x=2
	y=4
	z=x+y
	Le tableau de la memoire sera :
Etape  1   2	3 
	  X=2 X=2  X=2
	  	  Y=4  Y=4
	  		   Z=6
Les fonctions (semaine 2):
	-Une fonction est definie par le mot cle def , La syntaxe de la definition d'une fonctions est def nom_de_la_fonction(parametre):
	-L'on peut definir le type d'un argument en ecrivant def ma_fonction(nombre:int):
	-L'on peut aussi preciser la nature de ce quel renvoie def ma_fonction(nombre:int)->int:
	-Ici la fonction prend en parametre un entier et en renvoie un autre 
	-Lorsque que l'on ecrit une fonction l'on doit remplir la documentation 
	-La documentation s'ecrit juste apres la definition de la fonction prenons une fonction qui calcul la somme de 2 entiers 
	-Lorsque que l'on ecrit une fonction l'on doit indenter le code (c'est le decalage entre la ligne def est la doc ou le code )
	-La fonction se termine le plus souvent par le mot cle return , dans le cas ou il n'y en a pas la fonction renvoie rien
	def somme(x:int,y:int)->:
		"""
		Ici on ecrit la documentation 
		Ce que la fonction fait les eventuelle preconditions (ex pas de nombre negatif) et enfin des test d'utilisation
		La documentation de la fonction serait 
		Renvoie la somme de 2 element entier passe en parametre sous forme d'entier 
		Precondition : Aucune 
		Exemple :
		>>>somme(3,2)
		5
		Dans thonny l1 test les chevrons sont remplace par des dollars dans la documentation lors de sa completion automatique 
		Cela est propre a thonny l1 test de maniere general l'on met des chevrons
		"""
		return x+y
	-En python il existe des fonctions predefinis tel que :
		-Len(element) renvoie la longueur d'une chaine de caracteres 
		-abs(element) renvoie la valeur absolu d'un nombre passe en parametre 
		-sqrt(element) du module math qui renvoie la racine carr√© du nombre passe en parametre 

